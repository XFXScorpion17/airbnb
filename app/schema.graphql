type Query{
    listAlojamientos:[Alojamiento]
    listDirecciones:[Direccion]
    listUsuarios:[Usuario]
    listTipoAlojamientos:[TipoAlojamiento]
    listServicios:[Servicio]
}

type Mutation{
    createAlojamiento(data:createAlojamientoInput!):Alojamiento!
    createTipoAlojamiento(data:createTipoAlojamientoInput!):TipoAlojamiento!
    createServicio(data:createServicioInput!):Servicio!
}

#Alojamiento
type Alojamiento{
    _id:ID
    descripcion:String
    numero_banos:String
    numero_camas:String
    numero_dormitorios:String
	numero_huespedes:String!
    disposicion_huespedes:String
    espacio_exclusivo:String
}

input createAlojamientoInput {
	descripcion:String!
    numero_banos:String!
    numero_camas:String!
    numero_dormitorios:String!
	numero_huespedes:String!
    disposicion_huespedes:String
    espacio_exclusivo:String
}
#Fin Alojamiento

#Tipo de Alojamiento
type TipoAlojamiento{
    _id:ID
    descripcion:String
}

input createTipoAlojamientoInput {
	descripcion:String!
}
#Fin Tipo Alojamiento

#Direccion
type Direccion{
    _id:ID
    cCalle:String
    cColonia:String
    CEstado:String
    cNumero:String
	cPais:String
}

#Usuario
type Usuario{
    _id:ID
    cUsuario:String!
    cPassword:String!
    cNombre:String!
    cPrimerApellido:String!
    cSegundoApellido:String!
    cCorreo:String!
    cSexo:SEXO!
    iTelefono:Int
    cDireccion:Direccion
}

#Servicio
type Servicio{
    _id:ID
    nombre:String!
    descripcion:String!
}

input createServicioInput {
    nombre:String!
    descripcion:String!
}

#Enum
enum SEXO{
    H
    M
    O
}